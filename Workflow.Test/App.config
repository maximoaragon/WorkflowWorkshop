<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <connectionStrings>
    <add name="DES" connectionString="Data Source=js-localdb;User ID=***;Password=***;Initial Catalog=DES;" />
  </connectionStrings>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="Information" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <!--Uncomment the listener that you want to use-->
      <!--FlatFile Logging-->
      <add fileName="C:\logs\EPStrace.log" header="-------- Log Entry Begin --------" footer="--------- Log Entry End ---------" formatter="Text Formatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" filter="Error" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="FlatFile TraceListener" />
      <!--Event Logging-->
      <add source="EPS" formatter="Text Formatter" log="Application" machineName="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Formatted EventLog TraceListener" />
      <!--DataExchange Database Logging-->
      <add traceOutputOptions="None" filter="All" name="DataExchange Database TraceListener" initializeData="" formatter="Text Formatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" type="ShowCaseUtil.DataExchangeDatabaseTraceListener, ShowCaseUtil, Version=2.0.0.0, Culture=neutral, PublicKeyToken=aabe4c9789e7d06e" connectionString="Data Source=js-ml-db1\dev;User ID=sa_showcase;Password=Solutions1!;Initial Catalog=ShowCaseDuval;" toAddress="" fromAddress="ShowCaseDES@equivant.com" smtpServer="vol-mis-smtp0.vgnet.volgrp.com" subjectLineStarter="EPS Service Alert" />
    </listeners>
    <formatters>
      <add template="Message: {message}&#xA;Category: {category}&#xA;Priority: {priority}&#xA;EventId: {eventid}&#xA;Severity: {severity}&#xA;Title:{title}&#xA;Machine: {machine}&#xA;Application Domain: {appDomain}&#xA;Process Id: {processId}&#xA;Process Name: {processName}&#xA;Win32 Thread Id: {win32ThreadId}&#xA;Thread Name: {threadName}&#xA;Extended Properties: {dictionary({key} - {value}&#xA;)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Text Formatter" />
    </formatters>
    <logFilters>
      <!--Filter based on Priority or categories-->
      <!-- Priorities
      ActivityTracing = 1,// Flow event logs between processing activities and components
      Verbose = 2,// Low level events
      Information = 3,// Important and Successful milestones
      Warning = 4,// A possible problem has occured or may occur but the application still functions correctly
      Error = 5, // Unexpected Processing has happened. The application was not able to perform a task as expected
      Critical = 6 // Unhandled Exceptions
      -->
      <add minimumPriority="0" maximumPriority="2147483647" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Priority Filter" />
      <!--Category Filters-->
      <!--<add categoryFilterMode="DenyAllExceptAllowed" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Category Filter" />-->
    </logFilters>
    <!--Different categories can be logged in different stores using different listeners or can be logged into multiple stores-->
    <categorySources>
      <add switchValue="ActivityTracing" name="ActivityTracing">
        <listeners>
          <!--<add name="FlatFile TraceListener" />-->
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="Error" name="Error">
        <listeners>
          <add name="FlatFile TraceListener" />
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="Warning" name="Warning">
        <listeners>
          <!--<add name="FlatFile TraceListener" />-->
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="Verbose" name="Verbose">
        <listeners>
          <!--<add name="FlatFile TraceListener" />-->
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="Critical" name="Critical">
        <listeners>
          <!--<add name="FlatFile TraceListener" />-->
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="Information" name="Information">
        <listeners>
          <add name="Formatted EventLog TraceListener" />
          <add name="FlatFile TraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="DataExchange">
        <listeners>
          <add name="Formatted EventLog TraceListener" />
          <add name="DataExchange Database TraceListener" />
          <!--<add name="FlatFile TraceListener" />-->
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Formatted EventLog TraceListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="AuthenticationCookieBehavior" type="ApplicationServices.Configuration.Behaviors.AuthenticationCookieBehaviorExtensionElement, ClientConfiguration, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
      <bindingElementExtensions>
        <add name="gzipMessageEncoding" type="Microsoft.ServiceModel.Samples.GZipMessageEncodingElement, GZipEncoder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </bindingElementExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="AuthenticationCookieResponseBehavior">
          <AuthenticationCookieBehavior hasSession="false" inspectResponse="true" cookieSlidingExpirationMinutes="600" />
        </behavior>
        <behavior name="AuthenticationCookieRequestBehavior">
          <AuthenticationCookieBehavior hasSession="false" inspectRequest="true" inspectResponse="true" cookieSlidingExpirationMinutes="600" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IAuthenticationService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <binding name="BasicHttps" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="Transport">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <customBinding>
        <binding name="CacheCompressionBinding_ICacheService">
          <gzipMessageEncoding innerMessageEncoding="binaryMessageEncoding" />
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="2147483647" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="2147483647" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" />
        </binding>
      </customBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IAuthenticationService" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" establishSecurityContext="true" />
          </security>
        </binding>
        <binding name="WSHttpBinding_IImageProviderService" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" establishSecurityContext="true" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <endpoint address="https://showcase.equivant.com/AuthenticationService/Service.svc/basic" binding="basicHttpBinding" bindingConfiguration="BasicHttps" behaviorConfiguration="AuthenticationCookieResponseBehavior" contract="AuthenticationService.IAuthenticationService" name="WSHttpBinding_IAuthenticationService">
        <!--<identity>
          <servicePrincipalName value="host/js-ml-web1" />
        </identity>-->
      </endpoint>
      <endpoint address="http://showcase.equivant.com/CacheService/CacheService.svc" behaviorConfiguration="AuthenticationCookieRequestBehavior" binding="customBinding" bindingConfiguration="CacheCompressionBinding_ICacheService" contract="CacheService.ICacheService" name="CacheCompressionBinding_ICacheService" />
      <endpoint address="https://showcase.equivant.com/ImagingService/ImageProviderService.svc" behaviorConfiguration="AuthenticationCookieRequestBehavior" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IImageProviderService" contract="ImageServiceReference.IImageProviderService" name="WSHttpBinding_IImageProviderService" />
      <metadata>
        <policyImporters>
          <extension type="Microsoft.ServiceModel.Samples.GZipMessageEncodingBindingElementImporter, GZipEncoder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        </policyImporters>
      </metadata>
    </client>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>