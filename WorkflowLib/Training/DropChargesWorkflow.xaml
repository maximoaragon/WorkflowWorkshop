<Activity mc:Ignorable="sap sap2010 sads" x:Class="WorkflowLib.Templates.ShowCaseActivity"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:s="clr-namespace:ShowCaseClassLib;assembly=ShowCaseClassLib"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="MyCase" Type="InArgument(s:CCase)" />
    <x:Property Name="prosecutorActionName" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:WorkflowViewState.IdRef>WorkflowLib.Templates.ShowCaseActivity_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>ShowCaseClassLib</x:String>
      <x:String>System.Activities</x:String>
      <x:String>ShowCaseCCB</x:String>
      <x:String>BaseClassLib</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>ShowCaseClassLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>ShowCaseCCB</AssemblyReference>
      <AssemblyReference>BaseClassLib</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="The SAO will e-file the above document informing the Clerk of the charges being dropped. The department will update the following areas on the case.&#xA;o Update the pros phase with the prosecutor action and filing date&#xA;o Delete any future court dates&#xA;o Discharge active bonds&#xA;o Delete outstanding fees&#xA;o Index the document to the case" DisplayName="[Polk] No Bill/Nolle Prosse" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(s:CCharge)" Name="selectedCharges" />
      <Variable x:TypeArguments="s:CProsecutorAction" Name="prosecutorAction" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_3">
        <Assign DisplayName="prompt for charges" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:IEnumerable(s:CCharge)">[selectedCharges]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:IEnumerable(s:CCharge)">[ShowCaseCCB.GlobalUIExtensions.ShowSelectChargesForm(MyCase.GlobalClass, False, True).Cast(Of CCharge)]</InArgument>
          </Assign.Value>
        </Assign>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID2" Condition="[selectedCharges IsNot Nothing AndAlso selectedCharges.Count &gt; 0]" DisplayName="charge(s) selected" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                <Assign DisplayName="get prosecutor action" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:CProsecutorAction">[prosecutorAction]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:CProsecutorAction">[MyCase.GlobalClass.ProsecutorActions.GetByProsecutorAction(prosecutorActionName)]</InArgument>
                  </Assign.Value>
                </Assign>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID5" Condition="[prosecutorAction IsNot Nothing]" DisplayName="prosecutor action exists" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                        <ForEach x:TypeArguments="s:CCharge" DisplayName="ForEach&lt;CCharge&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[selectedCharges]">
                          <ActivityAction x:TypeArguments="s:CCharge">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:CCharge" Name="charge" />
                            </ActivityAction.Argument>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
                              <Assign DisplayName="set prosecutor action" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[charge.ProsecutorActionID]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[prosecutorAction.ProsecutorActionID]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="set filing date" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s1:DateTime">[charge.ProsecutorFilingDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s1:DateTime">[MyCase.GlobalClass.SmartDocketEffectiveDate]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <InvokeMethod DisplayName="save charge" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Save">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="s:CCharge">[charge]</InArgument>
                                </InvokeMethod.TargetObject>
                              </InvokeMethod>
                              <ForEach x:TypeArguments="s:CBond" DisplayName="ForEach&lt;CBond&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[charge.GetActiveBonds.Cast(Of CBond)]">
                                <ActivityAction x:TypeArguments="s:CBond">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:CBond" Name="bond" />
                                  </ActivityAction.Argument>
                                  <InvokeMethod DisplayName="close bond" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Close">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="s:CBond">[bond]</InArgument>
                                    </InvokeMethod.TargetObject>
                                  </InvokeMethod>
                                </ActivityAction>
                              </ForEach>
                              <ForEach x:TypeArguments="s:CCaseFee" DisplayName="ForEach&lt;CCaseFee&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[MyCase.CaseFees.GetCaseFeesByChargeID(charge.ChargeID).Cast(Of CCaseFee)]">
                                <ActivityAction x:TypeArguments="s:CCaseFee">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:CCaseFee" Name="fee" />
                                  </ActivityAction.Argument>
                                  <If Condition="[fee.AmountPaid = 0]" DisplayName="check if fee is paid" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <InvokeMethod DisplayName="delete fee" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Delete">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="s:CCaseFee">[fee]</InArgument>
                                        </InvokeMethod.TargetObject>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                </ActivityAction>
                              </ForEach>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                            <ForEach x:TypeArguments="s:CCourtEvent" DisplayName="ForEach&lt;CCourtEvent&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[MyCase.CourtEvents.GetFutureCourtEvents.Cast(Of CCourtEvent)]">
                              <ActivityAction x:TypeArguments="s:CCourtEvent">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:CCourtEvent" Name="ce" />
                                </ActivityAction.Argument>
                                <InvokeMethod DisplayName="delete future court event" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Delete">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="s:CCourtEvent">[ce]</InArgument>
                                  </InvokeMethod.TargetObject>
                                </InvokeMethod>
                              </ActivityAction>
                            </ForEach>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                        <TerminateWorkflow Exception="[New Exception(If(selectedCharges.Count = 0, &quot;No charges selected.&quot;, If(prosecutorAction Is Nothing, &quot;Prosecutor action not found.&quot;, &quot;Something's wrong: call Pradeep!&quot;)))]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" />
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <x:Reference>__ReferenceID0</x:Reference>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d0tDOlxkZXZccmVwb3NcV29ya2Zsb3dXb3Jrc2hvcFxXb3JrZmxvd0xpYlxUcmFpbmluZ1xEcm9wQ2hhcmdlc1dvcmtmbG93LnhhbWwkMQO0AQ8CAQE4CT8SAgEpQTtBgQECASieARmeAboCAgEmRBFLGgIBIE1DTWUCAR9QGYkBIwIBB4wBHZcBJwIBAj1GPa4BAgErOkc6WAIBKp4BNp4BgQICASdJR0mZAQIBI0ZIRloCASFQmAFQqwECAR5VHYcBKAIBCIwBpAGMAeQBAgEGkQEhlQEwAgEDVh9dKAIBG14fZSgCARhmH2ouAgEVax92KQIBEHcfhgEpAgEJkwFRkwFVAgEEW0lbbgIBHVhKWGUCARxjTWN6AgEaYE5gawIBGWhLaFMCARZrmgFrwgECARRwI3QyAgERd6ABd+wBAgEPfCOEASgCAQpyTXJTAgESfDF8RwIBC34nggE2AgEMgAFUgAFZAgEN</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="494,128" />
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="218,128" />
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="494,276" />
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="218,128" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,276" />
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="494,424" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="516,1232">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="218,128" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">460,574.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,574.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">410,600 460,600</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_3" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">480,379</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="129,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">245.5,456.5</av:Point>
            <av:Size x:Key="ShapeSize">129,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">374.5,500 580,500 580,401</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">245.5,500 180,500 180,600 210,600</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">189,360</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,420 310,456.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="99,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">254.895,237.5</av:Point>
            <av:Size x:Key="ShapeSize">99,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">353.895,281 580,281 580,379</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">254.895,281 159,281 159,390 189,390</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">178.895,127.5</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">299.895,187.5 299.895,217.5 304.395,217.5 304.395,237.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1004,1058">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 299.895,107.5 299.895,127.5</av:PointCollection>
            <x:Double x:Key="Width">990</x:Double>
            <x:Double x:Key="Height">924.5</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WorkflowLib.Templates.ShowCaseActivity_1" sap:VirtualizedContainerService.HintSize="1044,1138" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>