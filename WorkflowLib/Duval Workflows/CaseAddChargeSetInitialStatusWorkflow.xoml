<ns0:BaseWorkflow Initialized="BaseWorkflow_Initialized" Completed="BaseWorkflow_Completed" InputParameters="{p1:Null}" x:Name="CaseAddChargeSetInitialStatusWorkflow" ParameterValues="{x:Null}" InputParametersFormat="citationID:System.Int32,chargeID:System.Int32" Case="{x:Null}" EnableCaseTransaction="False" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:p1="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
	<ns5:CallMethodActivity MethodName="GetByID" ParameterTypes="{x:Null}" Type="{x:Type p5:CCharges}" x:Name="GetCharge" xmlns:p5="http://aptitudesolutions.com/ShowCaseClassLib" xmlns:ns5="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
		<ns7:CallMethodActivity.Parameters xmlns:ns7="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
			<WorkflowParameterBinding ParameterName="piID">
				<WorkflowParameterBinding.Value>
					<ActivityBind Path="InputParameters.Item[1].ConvertToInteger" Name="CaseAddChargeSetInitialStatusWorkflow" />
				</WorkflowParameterBinding.Value>
			</WorkflowParameterBinding>
		</ns7:CallMethodActivity.Parameters>
		<ns8:CallMethodActivity.InstanceObject xmlns:ns8="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
			<ActivityBind Path="Case.Charges" Name="CaseAddChargeSetInitialStatusWorkflow" />
		</ns8:CallMethodActivity.InstanceObject>
	</ns5:CallMethodActivity>
	<IfElseActivity x:Name="CheckForCharge">
		<IfElseBranchActivity x:Name="ChargeExistsAndCaseIsTrafficCivil">
			<IfElseBranchActivity.Condition>
				<RuleConditionReference ConditionName="ChargeExists" />
			</IfElseBranchActivity.Condition>
			<ns9:CallMethodActivity MethodName="GetComboValue" ParameterTypes="{x:Null}" Type="{x:Type p9:CInitialStatuss}" x:Name="GetInitialStatusCitation" xmlns:p9="http://aptitudesolutions.com/ShowCaseClassLib" xmlns:ns9="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
				<ns10:CallMethodActivity.Parameters xmlns:ns10="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
					<WorkflowParameterBinding ParameterName="psProp">
						<WorkflowParameterBinding.Value>
							<ns11:String xmlns:ns11="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">initialstatus</ns11:String>
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
					<WorkflowParameterBinding ParameterName="psComboItem">
						<WorkflowParameterBinding.Value>
							<ns11:String xmlns:ns11="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">non-booked traffic</ns11:String>
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns10:CallMethodActivity.Parameters>
				<ns12:CallMethodActivity.InstanceObject xmlns:ns12="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
					<ActivityBind Path="GlobalClass.InitialStatuss" Name="CaseAddChargeSetInitialStatusWorkflow" />
				</ns12:CallMethodActivity.InstanceObject>
			</ns9:CallMethodActivity>
			<ns13:CallMethodActivity MethodName="set_InitialStatusID" ParameterTypes="{x:Null}" Type="{x:Type p9:CCharge}" x:Name="SetChargesInitStatusCitation" xmlns:p9="http://aptitudesolutions.com/ShowCaseClassLib" xmlns:ns13="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
				<ns14:CallMethodActivity.Parameters xmlns:ns14="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
					<WorkflowParameterBinding ParameterName="piInitialStatusID">
						<WorkflowParameterBinding.Value>
							<ActivityBind Path="ReturnParameter.ConvertToInteger" Name="GetInitialStatusCitation" />
						</WorkflowParameterBinding.Value>
					</WorkflowParameterBinding>
				</ns14:CallMethodActivity.Parameters>
				<ns15:CallMethodActivity.InstanceObject xmlns:ns15="http://aptitudesolutions.com/ShowCaseWorkflowActivityLib">
					<ActivityBind Path="ReturnParameter.ConvertToCCharge" Name="GetCharge" />
				</ns15:CallMethodActivity.InstanceObject>
			</ns13:CallMethodActivity>
		</IfElseBranchActivity>
	</IfElseActivity>
</ns0:BaseWorkflow>